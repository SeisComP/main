<?xml version="1.0" encoding="UTF-8"?>
<seiscomp>
	<module name="scmssort" category="Utilities" standalone="true">
		<description>
			Read and manipulate miniSEED records
		</description>

		<command-line>
			<synopsis>
			scmssort [options] input
			</synopsis>

			<group name="Options">

				<option flag="h" long-flag="help">
					<description>
						Show the command-line help and exit.
					</description>
				</option>
				<option flag="E" long-flag="sort-by-end-time">
					<description>
						Sort by end time.
					</description>
				</option>
				<option flag="i" long-flag="ignore">
					<description>
						Ignore all records which have no data samples.
					</description>
				</option>
				<option flag="l" long-flag="list">
					<description>
						File with streams to filter the records. One stream per
						line. Instead of a file read the from stdin (-). Line
						format: NET.STA.LOC.CHA - wildcards and regular expressions
						are considered. Example: CX.*..BH? .

						NSLC lists may be generated, e.g., using scinv.
					</description>
				</option>
				<option flag="o" long-flag="output">
					<description>
					Name of output file for miniSEED data (default is stdout).
					</description>
				</option>
				<option flag="r" long-flag="rm">
					<description>
						Remove all traces in stream list given by --list
						instead of keeping them.
					</description>
				</option>
				<option flag="t" long-flag="time-window" arg="TIME_WINDOW">
					<description>
						Specify time window (as one -properly quoted- string).
						Times are of course UTC and separated by a tilde ~

						Example:

						2020-03-28T15:48~2020-03-28T16:18
					</description>
				</option>
				<option flag="u" long-flag="uniqueness">
					<description>
						Ensure uniqueness of output, i.e. skip duplicate records.
					</description>
				</option>
				<option flag="v" long-flag="verbose">
					<description>
						Run in verbose mode.
					</description>
				</option>
			</group>
		</command-line>
	</module>
</seiscomp>
